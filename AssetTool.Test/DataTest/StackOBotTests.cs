namespace AssetTool.Test
{
    [Collection("Sequential")]
    public class StackOBotTests : TestBase
    {
        public StackOBotTests() => GlobalNames.Clear();

        [Fact] public void EdSplash() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\Splash\EdSplash"));
        [Fact] public void Splash() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\Splash\Splash"));
        [Fact] public void JetpackEnd() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Audio\JetpackEnd"));
        [Fact] public void JetpackLoop() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Audio\JetpackLoop"));
        [Fact] public void JetpackStart() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Audio\JetpackStart"));
        [Fact] public void SFX_CollectCoin() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Audio\SFX_CollectCoin"));
        [Fact] public void SFX_Jetpack() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Audio\SFX_Jetpack"));
        [Fact] public void SFX_Music() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Audio\SFX_Music"));
        [Fact] public void IA_Interact() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Input\IA_Interact"));
        [Fact] public void IA_Jump() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Input\IA_Jump"));
        [Fact] public void IA_Look() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Input\IA_Look"));
        [Fact] public void IA_Move() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Input\IA_Move"));
        [Fact] public void IA_Pause() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Input\IA_Pause"));
        [Fact] public void IA_UnpossesAndSpawnNew() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Input\IA_UnpossesAndSpawnNew"));
        [Fact] public void IMC_ThirdPersonControls() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Input\IMC_ThirdPersonControls"));
        [Fact] public void HLOD_Default() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Maps\HLOD_Default"));
        [Fact] public void BPI_HUD_Interface() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\UI\BPI_HUD_Interface"));
        [Fact] public void BP_InteractionComponent() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\Abilities\BP_InteractionComponent"));
        [Fact] public void Curve_JetpackBoost() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\Abilities\Curve_JetpackBoost"));
        [Fact] public void BP_Bot() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\Character\BP_Bot"));
        [Fact] public void BPFL_InGame() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\Framework\BPFL_InGame"));
        [Fact] public void BPI_GameInstance() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\Framework\BPI_GameInstance"));
        [Fact] public void GI_StackOBot() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\Framework\GI_StackOBot"));
        [Fact] public void GM_InGame() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\Framework\GM_InGame"));
        [Fact] public void HUD_InGame() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\Framework\HUD_InGame"));
        [Fact] public void PC_InGame() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\Framework\PC_InGame"));
        [Fact] public void BP_Button() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\GameElements\BP_Button"));
        [Fact] public void BP_Cable() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\GameElements\BP_Cable"));
        [Fact] public void BP_Crate() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\GameElements\BP_Crate"));
        [Fact] public void BP_Door() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\GameElements\BP_Door"));
        [Fact] public void BP_Elevator() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\GameElements\BP_Elevator"));
        [Fact] public void BP_EnergyOrb() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\GameElements\BP_EnergyOrb"));
        [Fact] public void BP_Fan() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\GameElements\BP_Fan"));
        [Fact] public void BP_Lamp() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\GameElements\BP_Lamp"));
        [Fact] public void BP_MovingPlatform() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\GameElements\BP_MovingPlatform"));
        [Fact] public void BP_PressurePlate() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\GameElements\BP_PressurePlate"));
        [Fact] public void BP_Ramp() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\GameElements\BP_Ramp"));
        [Fact] public void BP_SpawnPad() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\GameElements\BP_SpawnPad"));
        [Fact] public void BP_Stomper() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\GameElements\BP_Stomper"));
        [Fact] public void CR_MovingPlatform() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\GameElements\CR_MovingPlatform"));
        [Fact] public void CollectableObjectData() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\SaveGame\CollectableObjectData"));
        [Fact] public void LevelSaveObject() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\SaveGame\LevelSaveObject"));
        [Fact] public void PlayerSaveObject() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\SaveGame\PlayerSaveObject"));
        [Fact] public void BPW_Controls() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\UI\BPW_Controls"));
        [Fact] public void BPW_HeadupDisplay() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\UI\BPW_HeadupDisplay"));
        [Fact] public void BPW_HintText() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Blueprints\UI\BPW_HintText"));
        [Fact] public void ABP_Bot() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\ABP_Bot"));
        [Fact] public void SM_Bush_FoliageType() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Foilage\SM_Bush_FoliageType"));
        [Fact] public void SM_Tree_FoliageType() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Foilage\SM_Tree_FoliageType"));
        [Fact] public void MD_Chevron() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\MD_Chevron"));
        [Fact] public void MD_Grunge() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\MD_Grunge"));
        [Fact] public void MF_WorldSpaceUV() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\MF_WorldSpaceUV"));
        [Fact] public void MI_Carbon() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\MI_Carbon"));
        [Fact] public void MI_Concrete() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\MI_Concrete"));
        [Fact] public void MI_ConcreteTileable() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\MI_ConcreteTileable"));
        [Fact] public void MI_Glow() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\MI_Glow"));
        [Fact] public void MI_GridObjects() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\MI_GridObjects"));
        [Fact] public void MI_HoloGrid() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\MI_HoloGrid"));
        [Fact] public void MI_Metal() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\MI_Metal"));
        [Fact] public void MI_MetalTileable() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\MI_MetalTileable"));
        [Fact] public void MI_Plastic() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\MI_Plastic"));
        [Fact] public void MI_Plastic_PipeGrey() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\MI_Plastic_PipeGrey"));
        [Fact] public void MI_Plastic_Piping() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\MI_Plastic_Piping"));
        [Fact] public void ML_Base() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\ML_Base"));
        [Fact] public void MPC_DataSet() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\MPC_DataSet"));
        [Fact] public void M_GenericPlayerPickup_Ring() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\M_GenericPlayerPickup_Ring"));
        [Fact] public void M_GratingTileable() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\M_GratingTileable"));
        [Fact] public void M_Grid() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\M_Grid"));
        [Fact] public void M_HoloGrid() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\M_HoloGrid"));
        [Fact] public void M_HoloGridFence() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\M_HoloGridFence"));
        [Fact] public void M_TileMaster() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\M_TileMaster"));
        [Fact] public void SM_1MCube_NC() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_1MCube_NC"));
        [Fact] public void SM_Cube1M() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_Cube1M"));
        [Fact] public void SM_Fan_Frame() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_Fan_Frame"));
        [Fact] public void SM_Fan_Grating() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_Fan_Grating"));
        [Fact] public void SM_Fence_Pillar() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_Fence_Pillar"));
        [Fact] public void SM_Fence_Pillar_Corner() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_Fence_Pillar_Corner"));
        [Fact] public void SM_Fence_Single() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_Fence_Single"));
        [Fact] public void SM_FloorBase() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_FloorBase"));
        [Fact] public void SM_GenericBox() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_GenericBox"));
        [Fact] public void SM_GenericPlane() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_GenericPlane"));
        [Fact] public void SM_GratIng() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_GratIng"));
        [Fact] public void SM_Modular_WallDoor() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_Modular_WallDoor"));
        [Fact] public void SM_Modular_Wall_250() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_Modular_Wall_250"));
        [Fact] public void SM_Modular_Wall_InnerCorner() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_Modular_Wall_InnerCorner"));
        [Fact] public void SM_Modular_Window() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_Modular_Window"));
        [Fact] public void SM_Modules_Floor() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_Modules_Floor"));
        [Fact] public void SM_Modules_Pillar() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_Modules_Pillar"));
        [Fact] public void SM_Modules_PillarBase() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_Modules_PillarBase"));
        [Fact] public void SM_Modules_PillarWideBottom() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_Modules_PillarWideBottom"));
        [Fact] public void SM_Modules_Platform() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_Modules_Platform"));
        [Fact] public void SM_Modules_Roof() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_Modules_Roof"));
        [Fact] public void SM_Modules_TrimFloor() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_Modules_TrimFloor"));
        [Fact] public void SM_Modules_TrimRoof_Corner() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_Modules_TrimRoof_Corner"));
        [Fact] public void SM_PipesRing() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_PipesRing"));
        [Fact] public void SM_PipesSpline_Body() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_PipesSpline_Body"));
        [Fact] public void SM_Pipes_250() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_Pipes_250"));
        [Fact] public void SM_Pipes_90DegreeBend() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_Pipes_90DegreeBend"));
        [Fact] public void SM_Pipes_90DegreeBend_01() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_Pipes_90DegreeBend_01"));
        [Fact] public void SM_Pipes_90DegreeBend_02() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_Pipes_90DegreeBend_02"));
        [Fact] public void SM_Ramp() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_Ramp"));
        [Fact] public void SM_RATriangle() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Modular\SM_RATriangle"));
        [Fact] public void SM_Button_Frame() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Props\SM_Button_Frame"));
        [Fact] public void SM_Button_Pushable() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Props\SM_Button_Pushable"));
        [Fact] public void SM_CableCylinder() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Props\SM_CableCylinder"));
        [Fact] public void SM_Crate() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Props\SM_Crate"));
        [Fact] public void SM_Door() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Props\SM_Door"));
        [Fact] public void SM_Elevator() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Props\SM_Elevator"));
        [Fact] public void SM_Fan_Fan() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Props\SM_Fan_Fan"));
        [Fact] public void SM_GenericMachine_Engine() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Props\SM_GenericMachine_Engine"));
        [Fact] public void SM_GenericPlayerPickup_Core() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Props\SM_GenericPlayerPickup_Core"));
        [Fact] public void SM_GenericPlayerPickup_Ring() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Props\SM_GenericPlayerPickup_Ring"));
        [Fact] public void SM_Lamp() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Props\SM_Lamp"));
        [Fact] public void SM_PressurePlate_Frame() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Props\SM_PressurePlate_Frame"));
        [Fact] public void SM_PressurePlate_Platform() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Props\SM_PressurePlate_Platform"));
        [Fact] public void SM_SatelliteDish_Base() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Props\SM_SatelliteDish_Base"));
        [Fact] public void SM_SatelliteDish_Body() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Props\SM_SatelliteDish_Body"));
        [Fact] public void SM_SatelliteDish_Dish() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Props\SM_SatelliteDish_Dish"));
        [Fact] public void SM_SpawnPad_Base() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Props\SM_SpawnPad_Base"));
        [Fact] public void SM_SpawnPad_Ring() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Props\SM_SpawnPad_Ring"));
        [Fact] public void SM_TVScreenSupport() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Props\SM_TVScreenSupport"));
        [Fact] public void FT_Boulder() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Rocks\FT_Boulder"));
        [Fact] public void FT_RockFlats_01() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Rocks\FT_RockFlats_01"));
        [Fact] public void FT_RockFlats_02() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Rocks\FT_RockFlats_02"));
        [Fact] public void SM_Boulder() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Rocks\SM_Boulder"));
        [Fact] public void CamShake() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\FX\CameraShakes\CamShake"));
        [Fact] public void FX_CharacterDesolve() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\FX\Desolve\FX_CharacterDesolve"));
        [Fact] public void M_AntBotDesolve() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\FX\Desolve\M_AntBotDesolve"));
        [Fact] public void T_DesolveNoise() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\FX\Desolve\T_DesolveNoise"));
        [Fact] public void M_Dusty() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\FX\Environment\M_Dusty"));
        [Fact] public void M_SandWisp() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\FX\Environment\M_SandWisp"));
        [Fact] public void M_Smoke() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\FX\Environment\M_Smoke"));
        [Fact] public void NS_GroundSwish() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\FX\Environment\NS_GroundSwish"));
        [Fact] public void NS_Vents() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\FX\Environment\NS_Vents"));
        [Fact] public void FX_JetpackThruster() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\FX\JetpackThruster\FX_JetpackThruster"));
        [Fact] public void M_JetpackThrusterEfect() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\FX\JetpackThruster\M_JetpackThrusterEfect"));
        [Fact] public void MF_SpawnEffect() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\FX\Spawn\MF_SpawnEffect"));
        [Fact] public void FX_SpawnPadActive() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\FX\SpawnPadActive\FX_SpawnPadActive"));
        [Fact] public void FX_WindBands() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\FX\Windbands\FX_WindBands"));
        [Fact] public void M_WindWhispsRibbon() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\FX\Windbands\M_WindWhispsRibbon"));
        [Fact] public void BPP_Struct_001() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Maps\Structures\BPP_Struct_001"));
        [Fact] public void BPP_Struct_002() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Maps\Structures\BPP_Struct_002"));
        [Fact] public void BPP_Struct_003() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Maps\Structures\BPP_Struct_003"));
        [Fact] public void BPP_Struct_004() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Maps\Structures\BPP_Struct_004"));
        [Fact] public void BPW_LoadingScreen() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\UI\LoadingScreen\BPW_LoadingScreen"));
        [Fact] public void BPW_MainMenu() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\UI\MainMenu\BPW_MainMenu"));
        [Fact] public void GM_MainMenu() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\UI\MainMenu\GM_MainMenu"));
        [Fact] public void HUD_MainMenu() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\UI\MainMenu\HUD_MainMenu"));
        [Fact] public void BPW_Button_Base() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\UI\PauseMenu\BPW_Button_Base"));
        [Fact] public void BPW_PauseMenu() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\UI\PauseMenu\BPW_PauseMenu"));
        [Fact] public void T_Bot_ThumbsUp_Circle_Background() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\UI\Textures\T_Bot_ThumbsUp_Circle_Background"));
        [Fact] public void T_GamepadIcon() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\UI\Textures\T_GamepadIcon"));
        [Fact] public void T_WhitePixel() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\UI\Textures\T_WhitePixel"));
        [Fact] public void MI_Backpack() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Backpack\Materials\MI_Backpack"));
        [Fact] public void SKM_Backpack() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Backpack\Mesh\SKM_Backpack"));
        [Fact] public void SK_Backpack() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Backpack\Mesh\SK_Backpack"));
        [Fact] public void T_Backpack_Albedo() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Backpack\Textures\T_Backpack_Albedo"));
        [Fact] public void T_Backpack_Masks() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Backpack\Textures\T_Backpack_Masks"));
        [Fact] public void T_Backpack_M_R_AO() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Backpack\Textures\T_Backpack_M_R_AO"));
        [Fact] public void T_Backpack_Normal() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Backpack\Textures\T_Backpack_Normal"));
        [Fact] public void AM_Bot_Interact_PressButton() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Animations\AM_Bot_Interact_PressButton"));
        [Fact] public void A_Bot_Fall() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Animations\A_Bot_Fall"));
        [Fact] public void A_Bot_Hover_End() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Animations\A_Bot_Hover_End"));
        [Fact] public void A_Bot_Hover_Loop() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Animations\A_Bot_Hover_Loop"));
        [Fact] public void A_Bot_Hover_Start() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Animations\A_Bot_Hover_Start"));
        [Fact] public void A_Bot_Idle() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Animations\A_Bot_Idle"));
        [Fact] public void A_Bot_IdleJump() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Animations\A_Bot_IdleJump"));
        [Fact] public void A_Bot_Idle_Inactive() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Animations\A_Bot_Idle_Inactive"));
        [Fact] public void A_Bot_Interact_PressButton() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Animations\A_Bot_Interact_PressButton"));
        [Fact] public void A_Bot_LandIdle() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Animations\A_Bot_LandIdle"));
        [Fact] public void A_Bot_LandRun() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Animations\A_Bot_LandRun"));
        [Fact] public void A_Bot_Run() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Animations\A_Bot_Run"));
        [Fact] public void A_Bot_RunJump() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Animations\A_Bot_RunJump"));
        [Fact] public void A_Bot_Run_LeanLeft() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Animations\A_Bot_Run_LeanLeft"));
        [Fact] public void A_Bot_Run_LeanRight() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Animations\A_Bot_Run_LeanRight"));
        [Fact] public void A_Bot_Walk() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Animations\A_Bot_Walk"));
        [Fact] public void BS_Bot_RunIdleJump() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Animations\BS_Bot_RunIdleJump"));
        [Fact] public void BS_Bot_WalkRunLean() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Animations\BS_Bot_WalkRunLean"));
        [Fact] public void MI_BotFace() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Materials\MI_BotFace"));
        [Fact] public void M_BotBase() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Materials\M_BotBase"));
        [Fact] public void M_BotFace() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Materials\M_BotFace"));
        [Fact] public void SKM_Bot() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Mesh\SKM_Bot"));
        [Fact] public void SK_Bot() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Mesh\SK_Bot"));
        [Fact] public void CR_Bot_Correction() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Rig\CR_Bot_Correction"));
        [Fact] public void PhA_Bot() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Rig\PhA_Bot"));
        [Fact] public void T_Bot_Albedo() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Textures\T_Bot_Albedo"));
        [Fact] public void T_Bot_FaceBG() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Textures\T_Bot_FaceBG"));
        [Fact] public void T_Bot_Masks() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Textures\T_Bot_Masks"));
        [Fact] public void T_Bot_M_R_AO() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Textures\T_Bot_M_R_AO"));
        [Fact] public void T_Bot_Normal() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Textures\T_Bot_Normal"));
        [Fact] public void T_Eyes_Atlas() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Characters\Bot\Textures\T_Eyes_Atlas"));
        [Fact] public void MF_RotateAwayPoint() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Foilage\Materials\MF_RotateAwayPoint"));
        [Fact] public void MF_TreeWind() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Foilage\Materials\MF_TreeWind"));
        [Fact] public void M_CyberFern() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Foilage\Materials\M_CyberFern"));
        [Fact] public void M_CyberFern_NoWPO() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Foilage\Materials\M_CyberFern_NoWPO"));
        [Fact] public void M_CyberFrond() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Foilage\Materials\M_CyberFrond"));
        [Fact] public void M_CyberFrond_NoWPO() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Foilage\Materials\M_CyberFrond_NoWPO"));
        [Fact] public void M_CyberTrunk() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Foilage\Materials\M_CyberTrunk"));
        [Fact] public void M_CyberTrunk_NoWPO() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Foilage\Materials\M_CyberTrunk_NoWPO"));
        [Fact] public void M_Grass() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Foilage\Materials\M_Grass"));
        [Fact] public void M_TreeBase() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Foilage\Materials\M_TreeBase"));
        [Fact] public void M_TreeBaseNOWPO() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Foilage\Materials\M_TreeBaseNOWPO"));
        [Fact] public void SM_Bush() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Foilage\Meshes\SM_Bush"));
        [Fact] public void SM_GrassClump() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Foilage\Meshes\SM_GrassClump"));
        [Fact] public void SM_Tree() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Foilage\Meshes\SM_Tree"));
        [Fact] public void T_Grass() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Foilage\Textures\T_Grass"));
        [Fact] public void T_Leaves_D() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Foilage\Textures\T_Leaves_D"));
        [Fact] public void T_Leaves_M() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Foilage\Textures\T_Leaves_M"));
        [Fact] public void T_Leaves_N() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Foilage\Textures\T_Leaves_N"));
        [Fact] public void Wind() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Foilage\Textures\Wind"));
        [Fact] public void Grass_LayerInfo() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Landscape\LandscapeLayers\Grass_LayerInfo"));
        [Fact] public void GT_Grass() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Landscape\LandscapeLayers\GT_Grass"));
        [Fact] public void Pebbles_LayerInfo() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Landscape\LandscapeLayers\Pebbles_LayerInfo"));
        [Fact] public void Rock_LayerInfo() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Landscape\LandscapeLayers\Rock_LayerInfo"));
        [Fact] public void Sand_LayerInfo() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Landscape\LandscapeLayers\Sand_LayerInfo"));
        [Fact] public void MF_Grass() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Landscape\Materials\MF_Grass"));
        [Fact] public void MF_Pebbles() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Landscape\Materials\MF_Pebbles"));
        [Fact] public void MF_Rock() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Landscape\Materials\MF_Rock"));
        [Fact] public void MF_Sand() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Landscape\Materials\MF_Sand"));
        [Fact] public void MI_Boulder() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Landscape\Materials\MI_Boulder"));
        [Fact] public void M_Landscape() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Landscape\Materials\M_Landscape"));
        [Fact] public void M_Rock() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Landscape\Materials\M_Rock"));
        [Fact] public void SM_SlopeWarpLandscape() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Landscape\Mesh\SM_SlopeWarpLandscape"));
        [Fact] public void RVT_Crater() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Landscape\Textures\RVT_Crater"));
        [Fact] public void RVT_Crater_H() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Landscape\Textures\RVT_Crater_H"));
        [Fact] public void SVT_Crater() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Landscape\Textures\SVT_Crater"));
        [Fact] public void SVT_Crater_H() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Landscape\Textures\SVT_Crater_H"));
        [Fact] public void T_Grass_M() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Landscape\Textures\T_Grass_M"));
        [Fact] public void T_Bark_D() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\Textures\T_Bark_D"));
        [Fact] public void T_Bark_N() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\Textures\T_Bark_N"));
        [Fact] public void T_ConcreteTileable_BC() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\Textures\T_ConcreteTileable_BC"));
        [Fact] public void T_ConcreteTileable_M() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\Textures\T_ConcreteTileable_M"));
        [Fact] public void T_DustFX() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\Textures\T_DustFX"));
        [Fact] public void T_GenericPlayerPickup_RingMask() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\Textures\T_GenericPlayerPickup_RingMask"));
        [Fact] public void T_GratingTileable_N() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\Textures\T_GratingTileable_N"));
        [Fact] public void T_GratingTileable_Opacity() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\Textures\T_GratingTileable_Opacity"));
        [Fact] public void T_GratingTileable_Roughness() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\Textures\T_GratingTileable_Roughness"));
        [Fact] public void T_Grid_A() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\Textures\T_Grid_A"));
        [Fact] public void T_GrungeLeak_A() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\Textures\T_GrungeLeak_A"));
        [Fact] public void T_Grunge_A() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\Textures\T_Grunge_A"));
        [Fact] public void T_HoloGrid_M() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\Textures\T_HoloGrid_M"));
        [Fact] public void T_MetalTileable_BC() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\Textures\T_MetalTileable_BC"));
        [Fact] public void T_MetalTileable_N() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\Textures\T_MetalTileable_N"));
        [Fact] public void T_Metal_Painted_N() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\Textures\T_Metal_Painted_N"));
        [Fact] public void T_Pebbles_BC() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\Textures\T_Pebbles_BC"));
        [Fact] public void T_Ribbing_A() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\Textures\T_Ribbing_A"));
        [Fact] public void T_Ribbing_N() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\Textures\T_Ribbing_N"));
        [Fact] public void T_RockTileable_BC() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\Textures\T_RockTileable_BC"));
        [Fact] public void T_RockTileable_N() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\Textures\T_RockTileable_N"));
        [Fact] public void T_RockTint() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\Textures\T_RockTint"));
        [Fact] public void T_SandTileabe_N() => Assert.True(StructWriter.RebuildAsset(@"StackOBot\StackOBot\Environment\Materials\Textures\T_SandTileabe_N"));
    }
}