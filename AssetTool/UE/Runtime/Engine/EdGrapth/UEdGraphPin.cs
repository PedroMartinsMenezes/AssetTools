namespace AssetTool
{
    [Location("UEdGraphPin::Serialize(FArchive& Ar)")]
    [JsonAsset("EdGraphPin")]
    public class UEdGraphPin : UObject
    {
        public const string TypeName = "EdGraphPin";

        #region Part 1
        public FBool bNullPtr;
        public TRef LocalOwningNode;
        public FGuid PinGuid;
        #endregion

        #region Part 2
        public TRef OwningNode;
        public FGuid PinId;
        public FName PinName;
        public FString PinNameStr;
        public FText PinFriendlyName;
        public Int32 SourceIndex;
        public FString PinToolTip;
        public byte Direction;

        public FEdGraphPinType PinType;

        public FString DefaultValue;
        public FString AutogeneratedDefaultValue;
        public UInt32 DefaultObject;
        public FText DefaultTextValue;

        public List<UEdGraphPin> LinkedTo;
        public List<UEdGraphPin> SubPins;

        public UEdGraphPin ParentPin;
        public UEdGraphPin ReferencePassThroughConnection;

        public FGuid PersistentGuid;
        public UInt32 BitField;
        #endregion

        public enum EPinResolveType
        {
            OwningNode,
            LinkedTo,
            SubPins,
            ParentPin,
            ReferencePassThroughConnection
        };

        public void MovePart1(Transfer transfer, EPinResolveType type)
        {
            transfer.Move(ref bNullPtr);
            if (bNullPtr?.Value != true)
            {
                //bool UEdGraphPin::SerializePin(FArchive& Ar, UEdGraphPin*& PinRef, int32 ArrayIdx, UEdGraphPin* RequestingPin, EPinResolveType ResolveType, TArray<UEdGraphPin*>& OldPins)
                LocalOwningNode ??= new();
                LocalOwningNode.Move(transfer);
                transfer.Move(ref PinGuid);
                if (type == EPinResolveType.OwningNode)
                    MovePart2(transfer);
            }
        }

        [Location("bool UEdGraphPin::Serialize(FArchive& Ar)")]
        private UEdGraphPin MovePart2(Transfer transfer)
        {
            OwningNode ??= new();
            OwningNode.Move(transfer);
            transfer.Move(ref PinId);

            if (Supports.CustomVer(FFrameworkObjectVersion.Enums.PinsStoreFName))
                transfer.Move(ref PinName);
            else
                transfer.Move(ref PinNameStr);

            transfer.Move(ref PinFriendlyName);

            if (Supports.CustomVer(FUE5MainStreamObjectVersion.Enums.EdGraphPinSourceIndex))
                transfer.Move(ref SourceIndex);

            transfer.Move(ref PinToolTip);
            transfer.Move(ref Direction);

            PinType ??= new();
            PinType.Move(transfer);

            transfer.Move(ref DefaultValue);
            transfer.Move(ref AutogeneratedDefaultValue);
            transfer.Move(ref DefaultObject);
            transfer.Move(ref DefaultTextValue);

            LinkedTo ??= [];
            LinkedTo.Resize(transfer);
            LinkedTo.ForEach(x => x.MovePart1(transfer, EPinResolveType.LinkedTo));

            SubPins ??= [];
            SubPins.Resize(transfer);
            SubPins.ForEach(x => x.MovePart1(transfer, EPinResolveType.SubPins));

            ParentPin ??= new();
            ParentPin.MovePart1(transfer, EPinResolveType.ParentPin);

            ReferencePassThroughConnection ??= new();
            ReferencePassThroughConnection.MovePart1(transfer, EPinResolveType.ReferencePassThroughConnection);

            transfer.Move(ref PersistentGuid);
            transfer.Move(ref BitField);

            return this;
        }
    }
}
